create table public.checklist (
  id uuid not null default gen_random_uuid (),
  label text not null,
  value text not null,
  quantity integer null default 1,
  unit text null default 'cái'::text,
  notes text null,
  created_at timestamp with time zone null default timezone ('Asia/Ho_Chi_Minh'::text, now()),
  constraint checklist_pkey primary key (id),
  constraint checklist_value_key unique (value)
) TABLESPACE pg_default;

create table public.customers (
  id uuid not null default gen_random_uuid (),
  customer_code text not null,
  customer_type text not null,
  name text not null,
  tax_code text null,
  primary_contact_name text not null,
  primary_contact_phone text not null,
  primary_contact_email text not null,
  primary_contact_position text null,
  notes text null,
  created_at timestamp with time zone null default timezone ('Asia/Ho_Chi_Minh'::text, now()),
  google_map_code text null,
  address text null,
  ward text null,
  district text null,
  province text null,
  site_contact_name text null,
  site_contact_position text null,
  site_contact_phone text null,
  province_name text null,
  district_name text null,
  ward_name text null,
  constraint customers_pkey primary key (id),
  constraint customers_customer_code_key unique (customer_code)
) TABLESPACE pg_default;

create table public.job_assignments (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  job_id bigint not null,
  technician_id uuid not null,
  assigned_at timestamp with time zone not null default now(),
  status text not null default 'assigned'::text,
  notes text null,
  constraint job_assignments_pkey primary key (id),
  constraint job_assignments_job_id_fkey foreign KEY (job_id) references jobs (id) on delete CASCADE,
  constraint job_assignments_technician_id_fkey foreign KEY (technician_id) references technicians (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists job_assignments_job_id_idx on public.job_assignments using btree (job_id) TABLESPACE pg_default;

create index IF not exists job_assignments_technician_id_idx on public.job_assignments using btree (technician_id) TABLESPACE pg_default;

create table public.job_report_images (
  id bigint generated by default as identity not null,
  report_id bigint not null,
  image_url text not null,
  created_at timestamp with time zone not null default timezone ('Asia/Ho_Chi_Minh'::text, now()),
  constraint job_report_images_pkey primary key (id),
  constraint job_report_images_report_id_fkey foreign KEY (report_id) references work_reports (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists job_report_images_report_id_idx on public.job_report_images using btree (report_id) TABLESPACE pg_default;

create table public.jobs (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  customer_id uuid not null,
  user_id uuid not null,
  job_description text null,
  status text null default 'Mới tạo'::text,
  scheduled_date timestamp with time zone null,
  service_type text null,
  job_content text null,
  notes text null,
  checklist text[] null,
  completed boolean not null default false,
  constraint jobs_pkey primary key (id),
  constraint jobs_customer_id_fkey foreign KEY (customer_id) references customers (id) on delete CASCADE,
  constraint jobs_user_id_fkey foreign KEY (user_id) references auth.users (id) on delete set null
) TABLESPACE pg_default;

create table public.profiles (
  id uuid not null,
  name text not null,
  phone text null,
  position text null,
  role text not null default 'technician'::text,
  active boolean not null default true,
  created_at timestamp with time zone not null default now(),
  constraint profiles_pkey primary key (id),
  constraint profiles_id_fkey foreign KEY (id) references auth.users (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.technicians (
  id uuid not null default gen_random_uuid (),
  user_id uuid null,
  tech_code text not null,
  name text not null,
  phone text null,
  email text null,
  position text null,
  active boolean not null default true,
  created_at timestamp with time zone not null default now(),
  constraint technicians_pkey primary key (id),
  constraint technicians_tech_code_key unique (tech_code),
  constraint technicians_user_id_fkey foreign KEY (user_id) references auth.users (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.work_reports (
  id bigint generated by default as identity not null,
  job_id bigint not null,
  user_id uuid not null,
  user_email text null,
  check_in_time timestamp with time zone null,
  check_out_time timestamp with time zone null,
  notes text null,
  created_at timestamp with time zone not null default timezone ('Asia/Ho_Chi_Minh'::text, now()),
  updated_at timestamp with time zone null default timezone ('Asia/Ho_Chi_Minh'::text, now()),
  constraint work_reports_pkey primary key (id),
  constraint work_reports_job_id_fkey foreign KEY (job_id) references jobs (id) on delete CASCADE,
  constraint work_reports_user_id_fkey foreign KEY (user_id) references auth.users (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists work_reports_job_id_idx on public.work_reports using btree (job_id) TABLESPACE pg_default;

create index IF not exists work_reports_user_id_idx on public.work_reports using btree (user_id) TABLESPACE pg_default;