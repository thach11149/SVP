create table public.checklist (
  id uuid not null default gen_random_uuid (),
  label text not null,
  value text not null,
  quantity integer null default 1,
  unit text null default 'cái'::text,
  notes text null,
  created_at timestamp with time zone null default timezone ('Asia/Ho_Chi_Minh'::text, now()),
  constraint checklist_pkey primary key (id),
  constraint checklist_value_key unique (value)
) TABLESPACE pg_default;

create table public.customers (
  id uuid not null default gen_random_uuid (),
  customer_code text not null,
  customer_type text not null,
  name text not null,
  tax_code text null,
  primary_contact_name text not null,
  primary_contact_phone text not null,
  primary_contact_email text not null,
  primary_contact_position text null,
  notes text null,
  created_at timestamp with time zone null default timezone ('Asia/Ho_Chi_Minh'::text, now()),
  google_map_code text null,
  address text null,
  ward text null,
  district text null,
  province text null,
  site_contact_name text null,
  site_contact_position text null,
  site_contact_phone text null,
  province_name text null,
  district_name text null,
  ward_name text null,
  constraint customers_pkey primary key (id),
  constraint customers_customer_code_key unique (customer_code)
) TABLESPACE pg_default;

create table public.daily_chemical_status (
  id bigint generated by default as identity not null,
  user_id uuid not null,
  date text not null,
  status text not null default 'pending'::text,
  notes text null,
  confirmed_at timestamp with time zone null,
  created_at timestamp with time zone not null default timezone ('Asia/Ho_Chi_Minh'::text, now()),
  updated_at timestamp with time zone null default timezone ('Asia/Ho_Chi_Minh'::text, now()),
  date_type text null default 'single'::text,
  start_date date null,
  end_date date null,
  constraint daily_chemical_status_pkey primary key (id),
  constraint daily_chemical_status_user_date_unique unique (user_id, date),
  constraint daily_chemical_status_user_id_fkey foreign KEY (user_id) references auth.users (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists daily_chemical_status_user_date_idx on public.daily_chemical_status using btree (user_id, date) TABLESPACE pg_default;

create index IF not exists daily_chemical_status_date_range_idx on public.daily_chemical_status using btree (start_date, end_date) TABLESPACE pg_default;

create table public.job_assignments (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  job_id bigint not null,
  technician_id uuid not null,
  assigned_at timestamp with time zone not null default now(),
  status text not null default 'assigned'::text,
  notes text null,
  role text null default 'member'::text,
  constraint job_assignments_pkey primary key (id),
  constraint job_assignments_job_id_fkey foreign KEY (job_id) references jobs (id) on delete CASCADE,
  constraint job_assignments_technician_id_fkey foreign KEY (technician_id) references technicians (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists job_assignments_job_id_idx on public.job_assignments using btree (job_id) TABLESPACE pg_default;

create index IF not exists job_assignments_technician_id_idx on public.job_assignments using btree (technician_id) TABLESPACE pg_default;

create index IF not exists job_assignments_role_idx on public.job_assignments using btree (role) TABLESPACE pg_default;

create table public.job_checklist_items (
  id bigint generated by default as identity not null,
  job_id bigint not null,
  checklist_id uuid not null,
  completed boolean not null default false,
  notes text null,
  completed_at timestamp with time zone null,
  created_at timestamp with time zone not null default timezone ('Asia/Ho_Chi_Minh'::text, now()),
  constraint job_checklist_items_pkey primary key (id),
  constraint job_checklist_items_checklist_id_fkey foreign KEY (checklist_id) references checklist (id) on delete CASCADE,
  constraint job_checklist_items_job_id_fkey foreign KEY (job_id) references jobs (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists job_checklist_items_job_id_idx on public.job_checklist_items using btree (job_id) TABLESPACE pg_default;

create table public.job_materials (
  id bigint generated by default as identity not null,
  job_id bigint not null,
  material_id uuid not null,
  required_quantity numeric(10, 2) not null default 0,
  actual_quantity numeric(10, 2) null default 0,
  notes text null,
  created_at timestamp with time zone not null default timezone ('Asia/Ho_Chi_Minh'::text, now()),
  constraint job_materials_pkey primary key (id),
  constraint job_materials_job_id_fkey foreign KEY (job_id) references jobs (id) on delete CASCADE,
  constraint job_materials_material_id_fkey foreign KEY (material_id) references materials (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists job_materials_job_id_idx on public.job_materials using btree (job_id) TABLESPACE pg_default;

create index IF not exists job_materials_material_id_idx on public.job_materials using btree (material_id) TABLESPACE pg_default;

create table public.job_report_images (
  id bigint generated by default as identity not null,
  report_id bigint not null,
  image_url text not null,
  created_at timestamp with time zone not null default timezone ('Asia/Ho_Chi_Minh'::text, now()),
  constraint job_report_images_pkey primary key (id),
  constraint job_report_images_report_id_fkey foreign KEY (report_id) references work_reports (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists job_report_images_report_id_idx on public.job_report_images using btree (report_id) TABLESPACE pg_default;

create table public.jobs (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  customer_id uuid not null,
  user_id uuid not null,
  job_description text null,
  status text null default 'Mới tạo'::text,
  scheduled_date timestamp with time zone null,
  service_type text null,
  job_content text null,
  notes text null,
  checklist text[] null,
  completed boolean not null default false,
  scheduled_time text null,
  contact_person text null,
  contact_phone text null,
  special_requests text null,
  address text null,
  team_lead_id uuid null,
  team_size integer null default 1,
  team_members text null,
  constraint jobs_pkey primary key (id),
  constraint jobs_customer_id_fkey foreign KEY (customer_id) references customers (id) on delete CASCADE,
  constraint jobs_team_lead_id_fkey foreign KEY (team_lead_id) references auth.users (id) on delete set null,
  constraint jobs_user_id_fkey foreign KEY (user_id) references auth.users (id) on delete set null
) TABLESPACE pg_default;

create index IF not exists jobs_team_lead_idx on public.jobs using btree (team_lead_id) TABLESPACE pg_default;

create table public.materials (
  id uuid not null default gen_random_uuid (),
  name text not null,
  unit text not null default 'lít'::text,
  category text null default 'hóa chất'::text,
  notes text null,
  active boolean not null default true,
  created_at timestamp with time zone null default timezone ('Asia/Ho_Chi_Minh'::text, now()),
  constraint materials_pkey primary key (id),
  constraint materials_name_key unique (name)
) TABLESPACE pg_default;

create table public.profiles (
  id uuid not null,
  name text not null,
  phone text null,
  position text null,
  role text not null default 'technician'::text,
  active boolean not null default true,
  created_at timestamp with time zone not null default now(),
  constraint profiles_pkey primary key (id),
  constraint profiles_id_fkey foreign KEY (id) references auth.users (id) on delete CASCADE
) TABLESPACE pg_default;

create view public.technician_users as
select
  t.id as technician_id,
  t.user_id,
  t.tech_code,
  t.name,
  t.email,
  t.phone,
  t.active,
  au.email as auth_email,
  au.raw_user_meta_data ->> 'full_name'::text as full_name
from
  technicians t
  join auth.users au on t.user_id = au.id
where
  t.active = true;

  create table public.technicians (
  id uuid not null default gen_random_uuid (),
  user_id uuid null,
  tech_code text not null,
  name text not null,
  phone text null,
  email text null,
  position text null,
  active boolean not null default true,
  created_at timestamp with time zone not null default now(),
  constraint technicians_pkey primary key (id),
  constraint technicians_tech_code_key unique (tech_code),
  constraint technicians_user_id_fkey foreign KEY (user_id) references auth.users (id) on delete CASCADE
) TABLESPACE pg_default;

create table public.work_reports (
  id bigint generated by default as identity not null,
  job_id bigint not null,
  user_id uuid not null,
  user_email text null,
  check_in_time timestamp with time zone null,
  check_out_time timestamp with time zone null,
  notes text null,
  created_at timestamp with time zone not null default timezone ('Asia/Ho_Chi_Minh'::text, now()),
  updated_at timestamp with time zone null default timezone ('Asia/Ho_Chi_Minh'::text, now()),
  constraint work_reports_pkey primary key (id),
  constraint work_reports_job_id_fkey foreign KEY (job_id) references jobs (id) on delete CASCADE,
  constraint work_reports_user_id_fkey foreign KEY (user_id) references auth.users (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists work_reports_job_id_idx on public.work_reports using btree (job_id) TABLESPACE pg_default;

create index IF not exists work_reports_user_id_idx on public.work_reports using btree (user_id) TABLESPACE pg_default;